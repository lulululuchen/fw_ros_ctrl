#!/usr/bin/env python
PACKAGE = "fw_ctrl"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

man_ctrl_enum = gen.enum([gen.const("DIRECTION", int_t, 0, "set roll (or bearing) and flight path angle (ground relative)"), # need a better name for this one
                          gen.const("ALTITUDE", int_t, 1, "set roll (or bearing) and altitude"),
                          gen.const("TERRAIN_ALTITUDE", int_t, 2, "set roll (or bearing) and altitude relative to terrain")],
                          "an enum to set the manual control type")
# NOTE: this is for now a separate enum, as possibly in the future we could add "heading control" (as oppose to bearing),
#       these are secondary options then, but for the same higher level modes above
#       another option could just be to make a separate category above for every combination.. kei ahnig
#       >> as for "lat" naming, the intention would be to also potentially include fpa (air-mass relative) as an optional
#       input in the longitudinal
man_ctrl_lat_input_enum = gen.enum([gen.const("ROLL", int_t, 0, "command roll angle"),
                                    gen.const("BEARING_RATE", int_t, 1, "command bearing rate")],
                                    "an enum to set the manual lateral-directional control input")

gen.add("man_ctrl_type", int_t, 0, "choose manual control type", 0, 0, 2, edit_method=man_ctrl_enum)
gen.add("man_ctrl_lat_input", int_t, 0, "choose lateral-directional manual control input", 0, 0, 1, edit_method=man_ctrl_lat_input_enum)
gen.add("max_bearing_rate", double_t, 0, "maximum bearing rate for manual velocity control [deg/s]", 20.0, 1.0, 60.0)
gen.add("en_man_ctrl", bool_t, 0, "enable manual control", False)

exit(gen.generate(PACKAGE, "fw_ctrl", "manual_control"))
